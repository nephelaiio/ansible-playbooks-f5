---
- name: Configure f5 node virtual servers

  hosts: f5_nodes

  gather_facts: no

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include variable definitions
      include_vars: 
        file: "{{ item }}"
      loop:
        - vars/common.yml

    - block:

        - name: install pip requirements
          pip:
            name:
              - f5-sdk
              - dnspython
          tags:
            - always

        - name: create virtual server
          bigip_virtual_server:
            name: "{{ _f5_vs.name }}"
            state: "{{ _f5_vs.state | default('present') }}"
            type: "{{ _f5_vs.type | default('standard') }}"
            ip_protocol: tcp
            destination: "{{ _f5_vs.address }}"
            port: "{{ _f5_vs.port }}"
            pool: "{{ _f5_vs.pool }}"
            default_persistence_profile: "{{ _f5_vs.default_persistence_profile | default('/Common/cookie') }}"
            port_translation: yes
            snat: "{{ _f5_vs.snat | default('automap') }}"
            partition: "{{ f5_partition }}"
            profiles: "{{ _f5_vs_profiles }}"
            security_log_profiles: "{{ _f5_vs.security_log_profiles | default(omit) }}"
            irules: "{{ _f5_vs.irules | default(omit) }}"
            provider:
              server: "{{ f5_host }}"
              user: "{{ f5_user_name }}"
              password: "{{ f5_user_pass }}"
              transport: rest
              validate_certs: "{{ _f5_validate_certs }}"
          vars:
            _f5_vs_profiles: "{{ _f5_vs.profiles | default([]) }}"
          loop_control:
            loop_var: _f5_vs
            label: "{{ _f5_vs.name }}"
          loop: "{{ f5_vss | default([]) }}"

        - block:

            - name: update virtual server dns records
              nsupdate:
                key_algorithm: "{{ f5_nsupdate_key_algorithm | default(omit) }}"
                key_name: "{{ f5_nsupdate_key_name | default(omit) }}"
                key_secret: "{{ f5_nsupdate_key_secret | default(omit) }}"
                server: "{{ _nsrecord_ns.target }}"
                type: A
                zone: "{{ _nsrecord_zone }}"
                record: "{{ _nsrecord_name }}"
                value: "{{ _f5_vs.address }}"
                state: "{{ 'absent' if _f5_vs.state | default('present') == 'absent' else 'present' }}" 
              vars:
                _f5_vs: "{{ item.0 }}"
                _nsrecord_fqdn: "{{ item.1 }}"
                _nsrecord_nsquery: "{{ lookup('dig', _nsrecord_zone, 'flat=0', 'qtype=NS') }}"
                _nsrecord_ns: "{{ _nsrecord_nsquery | first }}"
                _nsrecord_zone: "{{ _nsrecord_fqdn | split_with('.') | tail | join('.') }}"
                _nsrecord_name: "{{ _nsrecord_fqdn | split_with('.') | head }}"
              loop_control:
                label: "{{ _f5_vs.name }}"
              loop: "{{ f5_vss | default([]) | subelements('fqdns', skip_missing='yes') }}"

          ignore_errors: yes
          when: f5_nsupdate | default('no') | bool

      delegate_to: localhost
      when: f5_manage_vss | default('yes') | bool
